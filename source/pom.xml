<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.zkzn.bus</groupId>
  <artifactId>springboot-mybatis-redis-mongodb</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  
  
	<properties>  
        <java.version>1.7</java.version>
	    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>  
  	
  	 <!-- springboot 父节点依赖, 引入这个之后相关的引入就不需要添加version配置， springboot会自动选择最合适的版本进行添加。 -->
    <parent>
           <groupId>org.springframework.boot</groupId>
           <artifactId>spring-boot-starter-parent</artifactId>
           <version>1.3.3.RELEASE</version>
    </parent>
    
    
  	<dependencies>
  		 <!-- spring boot web支持：mvc,aop...-->
       <dependency>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-starter-web</artifactId>
       </dependency>
        <!-- PERSISTENCE begin -->
        <!--spring-boot mybatis依赖 -->
		<dependency>
		    <groupId>org.mybatis.spring.boot</groupId>
		    <artifactId>mybatis-spring-boot-starter</artifactId>
		    <version>1.1.1</version>
		</dependency>
        <!-- connection pool -->
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
        </dependency>
       <!-- mysql 数据库驱动. -->
   		<dependency>
              <groupId>mysql</groupId>
              <artifactId>mysql-connector-java</artifactId>
       </dependency>
       <!-- spring redis -->
       <dependency>
	       	<groupId>redis.clients</groupId>
	       	<artifactId>jedis</artifactId>
       </dependency>
       <!--
          MyBatis提供了拦截器接口，我们可以实现自己的拦截器，
          		将其作为一个plugin装入到SqlSessionFactory中。
              Github上有位开发者写了一个分页插件
              Github项目地址：https://github.com/pagehelper/Mybatis-PageHelper
   			 -->      
   		<dependency>
           <groupId>com.github.pagehelper</groupId>
           <artifactId>pagehelper</artifactId>
           <version>4.1.0</version>
       </dependency>
   		<dependency>
   			<groupId>com.github.jsqlparser</groupId>
   			<artifactId>jsqlparser</artifactId>
   			<version>0.9.4</version>
   		</dependency>

   		<dependency>  
            <groupId>junit</groupId>  
            <artifactId>junit</artifactId>  
            <scope>test</scope>  
        </dependency>
        <!-- 增加mongodb支持 -->
	    <dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-data-mongodb</artifactId>
	    </dependency>  
        <dependency>
        	<groupId>com.alibaba</groupId>
        	<artifactId>fastjson</artifactId>
        	<version>1.2.15</version>
        </dependency>
        <dependency>
        	<groupId>org.apache.commons</groupId>
        	<artifactId>commons-lang3</artifactId>
        	<version>3.4</version>
        </dependency>
        
         <!-- Swagger-->
          <dependency>
          	<groupId>io.springfox</groupId>
          	<artifactId>springfox-swagger-ui</artifactId>
          	<version>2.6.1</version>
          </dependency>
          <dependency>
          	<groupId>io.springfox</groupId>
          	<artifactId>springfox-swagger2</artifactId>
          	<version>2.6.1</version>
          </dependency>
          <!-- logback日志 -->
          <dependency>
          	<groupId>org.codehaus.janino</groupId>
          	<artifactId>janino</artifactId>
          </dependency>
          <!-- devtools可以实现页面热部署（即页面修改后会立即生效，
                     这个可以直接在application.properties文件中配置spring.thymeleaf.cache=false来实现），             
                     实现类文件热部署（类文件修改后不会立即生效），实现对属性文件的热部署。
                         即devtools会监听classpath下的文件变动，并且会立即重启应用（发生在保存时机）
                         ，注意：因为其采用的虚拟机机制，该项重启是很快的 -->
          <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
           <scope>true</scope>
        </dependency> 
		
  	</dependencies>
  
  
  	<build>
	      <plugins>
	           <plugin>
		            <groupId>org.springframework.boot</groupId>
		            <artifactId>spring-boot-maven-plugin </artifactId>
		            <!-- spring boot热加载 -->
		             <configuration>
                            <!--fork:  如果没有该项配置，肯呢个devtools不会起作用，即应用不会restart -->
                       <fork>true</fork>
                   </configuration>
	       		</plugin>
	       		<plugin>
				    <groupId>org.apache.felix</groupId>
				    <artifactId>maven-bundle-plugin</artifactId>
				    <extensions>true</extensions>
				</plugin>
	      </plugins>
	      <finalName>springboot-mybatis-redis-mongodb</finalName>
	 </build>
</project>